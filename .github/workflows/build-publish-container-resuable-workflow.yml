name: Build and Publish a OCI container

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      image-repo-name:
        required: true
        type: string
      image-author:
        required: true
        type: string
      image-description:
        required: true
        type: string
      image-documentation:
        required: true
        type: string
      image-platforms:
        required: false
        type: string
        default: linux/amd64
        description: list of platforms to build the image for
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      QUAY_TOKEN:
        required: true
      QUAY_USERNAME:
        required: true
      COSIGN_KEY:
        required: true
      COSIGN_PASSWORD: 
        required: true

env:
  IMAGE_FULL_NAME: ${{ inputs.image-repo-name }}/${{ inputs.image-name }}

jobs:
  build-sign-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    name: Build Image, Sign it and Publish it
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Install Cosign
        uses: sigstore/cosign-installer@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ inputs.image-repo-name }}/${{ inputs.image-name }}
          tags: |
            type=sha,format=long
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=${{ inputs.image-name }}
            org.opencontainers.image.description=${{ inputs.image-description }}
            org.opencontainers.image.authors=${{ inputs.image-author }}
            org.opencontainers.image.documentation=${{ inputs.image-documentation }}
          
      - id: docker_build
        name: Build and Push container images
        uses: docker/build-push-action@v4
        with:
          platforms: ${{ inputs.image-platforms }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
      
      - name: Write signing key to disk (only needed for `cosign sign --key`)
        run: echo "${{ secrets.COSIGN_KEY }}" > cosign.key

      - name: Sign image with signing key
        run: cosign sign --yes --key cosign.key -a "repo=${{ github.repository }}" -a "workflow=${{ github.workflow }}" -a "ref=${{ github.sha }}" ${IMAGE_FULL_NAME}@${IMAGE_DIGEST}
        env:
          IMAGE_DIGEST: ${{ steps.docker_build.outputs.digest }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      
      - name: Install skopeo
        run: sudo apt-get -y install skopeo

      - name: Copy Image to Quay.io - latest tag
        run: skopeo copy  --all --dest-creds="${QUAY_USERNAME}:${QUAY_TOKEN}" docker://docker.io/${IMAGE_FULL_NAME}@${IMAGE_DIGEST} docker://quay.io/${TAG}
        env:
          QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
          QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}
          IMAGE_DIGEST: ${{ steps.docker_build.outputs.digest }}
          TAG: ${{ fromJSON(steps.docker_meta.outputs.json).tags[0] }}
      
      - name: Copy Image to Quay.io - sha tag
        run: skopeo copy --all --dest-creds="${QUAY_USERNAME}:${QUAY_TOKEN}" docker://docker.io/${IMAGE_FULL_NAME}@${IMAGE_DIGEST} docker://quay.io/${TAG}
        env:
          QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
          QUAY_TOKEN: ${{ secrets.QUAY_TOKEN }}
          IMAGE_DIGEST: ${{ steps.docker_build.outputs.digest }}
          TAG: ${{ fromJSON(steps.docker_meta.outputs.json).tags[1] }}